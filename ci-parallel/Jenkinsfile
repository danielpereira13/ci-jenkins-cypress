pipeline {
    // agent {
    //     // this image provides everything needed to run Cypress
    //     docker {
    //     image 'cypress/base:10'
    //     // image 'cypress/included:4.8.0'
    //     }
    // }
    agent any
    parameters {
        choice(name: 'Browser', choices: ['Electron', 'Chrome', 'Firefox'], description: '')
        booleanParam(name: 'executeTests', defaultValue: true, description: '')
    }

    stages {
        stage('Build') {
            steps{
                echo "Build........................................................."
                script{
                    sh 'pwd'
                    sh 'ls -l'
                    sh 'ls -l /var/jenkins_home/workspace/parallel'
                    def testImage = docker.build("cy/base-image", "./ci-parallel")
                }
            }
        }
        
        // List all spec files to execute tests in parallel
        stage('List all SPEC files') {
            steps {
                echo "List all SPEC files........................................................."
                sh 'hostname'
                // script {
                //     def tests = [:]
                //     def workspace = pwd()
                //     def files = findFiles(glob: 'cypress/integration/examples/*.spec.js') 
                //     // echo """${files[0].name} ${files[0].path} ${files[0].directory} ${files[0].length} ${files[0].lastModified}"""
                //     for (f in files) {
                //         tests["${f.path}"] = {
                //             node {
                //                 agent {
                //                         // this image provides everything needed to run Cypress
                //                         docker {
                //                             image 'cy/base-image'
                //                             // image 'cypress/included:4.8.0'
                //                         }
                //                     }
                //                 stage("Running spec: ${f}") {
                //                     steps{
                //                         echo """:::::::::::::::::   ${f.path} """
                //                         // sh "npm cypress run --spec \"${f.path}\""
                //                         sh 'hostname'
                //                         sh 'pwd'
                //                         // sh "npx cypress run --spec \"${f.path}\""
                //                     }
                //                 }
                //             }
                //         }
                //     }
                //     parallel tests
                // }
                 script {
                        def tests = [:]
                        def workspace = pwd()
                        echo '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++'
                        def files = findFiles(glob: 'cypress/integration/examples/*.spec.js') 
                        // echo """${files[0].name} ${files[0].path} ${files[0].directory} ${files[0].length} ${files[0].lastModified}"""
                        for (f in files) {
                            tests["${f.path}"] = {
                                node {
                                    stage("${f}") {
                                        dir(workspace) {                    
                                            echo """:::::::::::::::::   ${f.path} """
                                            // sh "npm cypress run --spec \"${f.path}\""
                                            sh 'hostname'
                                            sh 'pwd'
                                            sh 'ls -l'
                                            // sh "npx cypress run --spec \"${f.path}\""
                                            sh "$(npm bin)/cypress -v"
                                        }
                                    }
                                }
                            }
                        }
                        parallel tests
                    }
            }
        }  

        // ==========================================================================================
        // stage('Run Tests In Parallel') {
        //     parallel {
        //         stage('First run'){
        //             steps{
        //                 sh 'npm run e2e:smoke'
        //             }
        //         }
        //         stage('Second run'){
        //             steps{
        //                 sh 'npm run e2e:smoketwo'
        //             }
        //         }
        //     }
        // }

        stage('Dummy stage'){
            steps{
                echo 'Dummy stage'
            }
        }
        // ==========================================================================================
        // stage('First run'){
        //     steps{
        //         catchError {
        //             echo '::::::::::::::::::::::: First run ::::::::::::::::::::'
        //             sh 'npm run e2e:smoke'
        //         }
        //         echo currentBuild.result
        //     }
        // }
        // stage('Second run'){
        //     steps{
        //         catchError {
        //             echo '::::::::::::::::::::::: Second run ::::::::::::::::::::'
        //             sh 'npm run e2e:smoketwo'
        //         }
        //         echo currentBuild.result
        //     }
        // }
    }
}