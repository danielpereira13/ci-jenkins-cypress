
// declare our vars outside the pipeline
def tests = [:]
def files

pipeline {
    agent {
        // this image provides everything needed to run Cypress
        docker {
        image 'cypress/base:10'
        // image 'cypress/included:4.8.0'
        }
    }

    stages {
        stage('Build') {
           steps{
               catchError {
                   // there a few default environment variables on Jenkins
                    // on local Jenkins machine (assuming port 8080) see
                    // http://localhost:8080/pipeline-syntax/globals#env
                    echo "Build........................................................."
                    sh 'hostname'
                    sh 'npm install'
                    // sh 'npm run cy:verify'
               }
               echo currentBuild.result
            }
        }

        stage('1') {
            steps {
                script {
                    // we've declared the variable, now we give it the values
                    files = findFiles(glob: 'cypress/integration/examples/*.spec.js')
                    // Loop through them
                    files.each { f ->
                        // add each object from the 'files' loop to the 'tests' array
                        tests[f] = {
                            // we're already in the script{} block, so do our advanced stuff here
                            echo f.toString()
                        }
                    }
                    // Still within the 'Script' block, run the parallel array object
                    parallel tests
                }
            }
        } 

        // ==========================================================================================
        // stage('Run Tests In Parallel') {
        //     parallel {
        //         stage('First run'){
        //             steps{
        //                 catchError {
        //                     echo '::::::::::::::::::::::: First run ::::::::::::::::::::'
        //                     sh 'npm run e2e:smoke'
        //                 }
        //                 echo currentBuild.result
        //             }
        //         }
        //         stage('Second run'){
        //             steps{
        //                 catchError {
        //                     echo '::::::::::::::::::::::: Second run ::::::::::::::::::::'
        //                     sh 'npm run e2e:smoketwo'
        //                 }
        //                 echo currentBuild.result
        //             }
        //         }
        //     }
        // }
        // ==========================================================================================
        // stage('First run'){
        //     steps{
        //         catchError {
        //             echo '::::::::::::::::::::::: First run ::::::::::::::::::::'
        //             sh 'npm run e2e:smoke'
        //         }
        //         echo currentBuild.result
        //     }
        // }
        // stage('Second run'){
        //     steps{
        //         catchError {
        //             echo '::::::::::::::::::::::: Second run ::::::::::::::::::::'
        //             sh 'npm run e2e:smoketwo'
        //         }
        //         echo currentBuild.result
        //     }
        // }
    }
}